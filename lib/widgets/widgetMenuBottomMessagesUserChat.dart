import 'package:flutter/material.dart';
import 'package:flutter_svg/flutter_svg.dart';
import 'package:flutter/cupertino.dart';

import 'package:responsive_flutter/responsive_flutter.dart';
import 'package:qvins/size_cofige.dart';

class widgetMenuBottomMessagesUserChat extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      height: getProportionateScreenHeight(719),
      color: Color(0xffFAFAFA),
      child: Column(
        children: [
          Expanded(
            //color: Colors.black,
            //height: getProportionateScreenHeight(719),
            child: Stack(
              children: [
                Container(
                  //color: Colors.black12,
                  width: getProportionateScreenWidth(375),
                  height: getProportionateScreenHeight(660),
                  child: SingleChildScrollView(
                    child: Padding(
                      padding: EdgeInsets.symmetric(horizontal: 16),
                      child: Column(
                        children: [
                          Comment(
                            messeg:
                                '–ü–æ—á–µ–º—É —Ç—ã –Ω–µ –ø—Ä–∏—à–µ–ª –Ω–∞ –Ω–∞—à–µ –ø–µ—Ä–≤–æ–µ —Å–≤–∏–¥–∞–Ω–∏–µ? –Ø –≤–µ–¥—å –∂–¥–∞–ª–∞ —Ç–µ–±—è!',
                            you: false,
                          ),
                          Comment(
                            messeg:
                                '–ò–∑–≤–∏–Ω–∏, –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å! –ó–∞—Å—Ç—Ä—è–ª –≤ –ø—Ä–æ–±–∫–µ –∏ –ø–æ—Ç–æ–º –ø—Ç–∏—á–∫–∞ –ø–æ–¥–Ω–∞—Å—Ä–∞–ª–∞, –ø—Ä–∏—à–ª–æ—Å—å –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è',
                            you: true,
                          ),
                          Comment(
                            messeg:
                                '–¢–∞–∫ –æ–±–∏–¥–Ω–æ, –ª–∞–¥–Ω–æ, –Ω–∏—á–µ–≥–æ.. –ë—ã–≤–∞–µ—Ç! –ú–æ–∂–µ–º –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è —Å–µ–≥–æ–¥–Ω—è?üòè',
                            you: false,
                          ),
                          Comment(
                            messeg: '–ê—É—É—É!!!',
                            you: false,
                          ),
                          Comment(
                            messeg: '–ù—É —á—Ç–æ —Ç–∞–º? –•—ç–π! –Ø –≤–æ–æ–±—â–µ-—Ç–æ –∂–¥—É –æ—Ç–≤–µ—Ç–∞!',
                            you: false,
                          ),
                          Comment(
                            messeg:
                                '–î–∞ –±–ª–∏–Ω! –ß–µ–≥–æ —Ç—ã —Ç–∞–∫–∞—è –ø–∞–Ω–∏–∫–µ—Ä—à–∞? –Ø –ø—Ä–æ—Å—Ç–æ –æ—Ç–æ—à–µ–ª.. –î–∞, –±–µ–∑ –ø—Ä–æ–±–ª–µ–º. –ö—É–¥–∞ –ø–æ–π–¥–µ–º, –µ—Å—Ç—å –∏–¥–µ–∏?',
                            you: true,
                          ),
                          Comment(
                            messeg:
                                '–ù–µ–¥–∞–≤–Ω–æ –±—ã–ª–∞ —Å –ø–æ–¥—Ä—É–≥–∞–º–∏ –≤ –∫–ª–∞—Å—Å–Ω–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–π ‚Äú–£ –ú–∏—Ö–∞–ª—ã—á–∞‚Äù, –∑–≤—É—á–∏—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ –∏ —Ç–∞–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞ –Ω–æ—á—å, –µ—Å–ª–∏ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è. –¢–∞–º —Ç–∞–∫-–∂–µ –µ—Å—Ç—å –∫–æ–Ω–Ω—ã–µ –ø—Ä–æ–≥—É–ª–∫–∏! –ù—É –∫–∞–∫, –ø–æ–π–¥–µ–º?',
                            you: false,
                          ),
                          Comment(
                            messeg:
                                '–î–∞, –±–µ–∑ –ø—Ä–æ–±–ª–µ–º, –ø–æ—à–ª–∏! –ó–∞–≤—Ç—Ä–∞ –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è –≤–æ–∑–ª–µ —Ç–≤–æ–µ–≥–æ –¥–æ–º–∞, –æ–∫–æ–ª–æ 19:00?',
                            you: true,
                          ),
                          Comment(
                            messeg:
                                '–î–∞, –±–µ–∑ –ø—Ä–æ–±–ª–µ–º, –ø–æ—à–ª–∏! –ó–∞–≤—Ç—Ä–∞ –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è –≤–æ–∑–ª–µ —Ç–≤–æ–µ–≥–æ –¥–æ–º–∞, –æ–∫–æ–ª–æ 19:00?',
                            you: true,
                          ),
                          Comment(
                            messeg:
                                '–î–∞, –±–µ–∑ –ø—Ä–æ–±–ª–µ–º, –ø–æ—à–ª–∏! –ó–∞–≤—Ç—Ä–∞ –≤—Å—Ç—Ä–µ—Ç–∏–º—Å—è –≤–æ–∑–ª–µ —Ç–≤–æ–µ–≥–æ –¥–æ–º–∞, –æ–∫–æ–ª–æ 19:00?',
                            you: true,
                          ),
                        ],
                      ),
                    ),
                  ),
                ),
                Positioned(
                  bottom: getProportionateScreenHeight(0),
                  child: Container(
                    color: Colors.white,
                    //margin: EdgeInsets.symmetric(vertical: 10),
                    padding: EdgeInsets.symmetric(
                        //vertical: getProportionateScreenHeight(10),
                        horizontal: MediaQuery.of(context).size.width *
                            0.026 //getProportionateScreenHeight(16),
                        ),

                    height: getProportionateScreenHeight(61),
                    width: getProportionateScreenWidth(375),
                    child: Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Container(
                          padding: EdgeInsets.symmetric(
                            vertical: getProportionateScreenHeight(10),
                            //horizontal: getProportionateScreenHeight(16),
                          ),
                          // constraints: BoxConstraints(
                          //     minWidth: 200,
                          //     maxWidth: getProportionateScreenWidth(375)),
                          width: MediaQuery.of(context).size.width * 0.78,
                          child: TextField(
                            style: TextStyle(
                              fontFamily: 'SF UI Text',
                              fontSize: ResponsiveFlutter.of(context)
                                  .fontSize(1.75), //14.0,
                              color: const Color(0xFF222222),
                            ),
                            decoration: InputDecoration(
                                //icon: Icon(Icons.ac_unit),
                                suffixIcon: IconButton(
                                    icon: Icon(Icons.send,
                                        color: Color(0xffFD4F6A)),
                                    onPressed: () {
                                      debugPrint('send TextField Chat');
                                    }),
                                focusedBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: Color(0xffBABABA),
                                    width: 0,
                                  ),
                                ),
                                enabledBorder: OutlineInputBorder(
                                  borderSide: BorderSide(
                                    color: Color(0xffBABABA),
                                    width: 0,
                                  ),
                                ),
                                fillColor: Color(0xffF9F9F9),
                                filled: true,
                                hintText: '–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ',
                                hintStyle: TextStyle(
                                  fontFamily: 'SF UI Text',
                                  fontSize: ResponsiveFlutter.of(context)
                                      .fontSize(1.75), //14.0,
                                  color: const Color(0xFFBABABA),
                                  fontWeight: FontWeight.w500,
                                ),
                                contentPadding: EdgeInsets.only(
                                  bottom: getProportionateScreenHeight(40) /
                                      2, // HERE THE IMPORTANT PART
                                  left: getProportionateScreenWidth(10),
                                )),
                          ),
                        ),
                        IconButton(
                          icon: Icon(
                            Icons.mic,
                            color: Color(0xffBABABA),
                            size: MediaQuery.of(context).size.width * 0.1,
                          ),
                          onPressed: () {
                            debugPrint('Microphone');
                          },
                          iconSize: MediaQuery.of(context).size.width * 0.1,
                        ),
                      ],
                    ),
                  ),
                )
              ],
            ),
          ),
        ],
      ),
    );
  }
}

class Comment extends StatelessWidget {
  Comment({this.you, this.messeg});
  bool you;
  String messeg;
  @override
  Widget build(BuildContext context) {
    return Container(
      margin: EdgeInsets.only(bottom: getProportionateScreenHeight(8)),
      child: Row(
        mainAxisAlignment:
            you ? MainAxisAlignment.end : MainAxisAlignment.start,
        children: [
          Container(
            constraints: BoxConstraints(
                minWidth: getProportionateScreenWidth(74),
                maxWidth: getProportionateScreenWidth(283)),
            padding: EdgeInsets.symmetric(
                vertical: getProportionateScreenHeight(12),
                horizontal: getProportionateScreenWidth(12)),
            decoration: BoxDecoration(
              color: you ? Color(0xffF4F4F4) : Color(0xffFD4F6A),
              borderRadius: you
                  ? BorderRadius.only(
                      topLeft: Radius.circular(35),
                      bottomLeft: Radius.circular(35),
                      topRight: Radius.circular(10),
                      bottomRight: Radius.circular(10),
                    )
                  : BorderRadius.only(
                      topLeft: Radius.circular(10),
                      bottomLeft: Radius.circular(10),
                      topRight: Radius.circular(35),
                      bottomRight: Radius.circular(35),
                    ),
            ),
            child: Text(
              messeg,
              style: you
                  ? TextStyle(
                      fontFamily: 'SF UI Text',
                      fontSize:
                          ResponsiveFlutter.of(context).fontSize(2), //16.0,
                      color: const Color(0xFF222222),
                    )
                  : TextStyle(
                      fontFamily: 'SF UI Text',
                      fontSize:
                          ResponsiveFlutter.of(context).fontSize(2), //16.0,
                      color: Colors.white,
                    ),
            ),
          ),
        ],
      ),
    );
  }
}
